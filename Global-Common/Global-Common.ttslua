local onModLoad = {}
--------------------------------------------------------------------------------
--- MEGA FREEZE -- (Freeze by tag "MegaFreeze", and Freeze by zone tagged with MegaFreeze) func('scriptzoneGUID', 'anyting')
function onModLoad.MegaFreeze(FreezeByGuidTable)
    local objectList = {}
    for _, obj in pairs(getObjectsWithTag('MegaFreeze')) do
        if obj.type == 'Scripting' then
            for k,o in pairs(obj.getObjects(true)) do
                objectList[o] = o.interactable
            end
        else
            objectList[obj] = obj.interactable
        end
    end

    if FreezeByGuidTable then
        for _, guid in ipairs(FreezeByGuidTable) do
            print('----------- FREEZE BY GUID -----------')
            objectList[getObjectFromGUID(guid)] = getObjectFromGUID(guid).interactable
        end
    end

    for o,v in pairs(objectList) do
        if o.interactable then
            o.interactable = false
        else
            o.interactable = true
        end
    end
end

--------------------------------------------------------------------------------
--- Fix Hand Zones - Fixe HandZone Height
    function onModLoad.FixHandZones(setY)

        local playerList = Player.getAvailableColors()
        for _, colour in ipairs(playerList) do
            local pramsOLD = Player[colour].getHandTransform()
            local Y = pramsOLD.position.y
            if setY ~= nil and type(setY) == type(42) then -- test type.. is the var == to the type of a number, in this case 42
                Y = setY
            end
            --print(Y)
            pramsNew = {position={pramsOLD.position.x, Y, pramsOLD.position.z}
                       ,rotation={pramsOLD.rotation.x, pramsOLD.rotation.y, pramsOLD.rotation.z}
                       ,scale={pramsOLD.scale.x, pramsOLD.scale.y, pramsOLD.scale.z}
                       }
            Player[colour].setHandTransform(pramsNew, 1)
        end
    end
--------------------------------------------------------------------------------
return onModLoad
