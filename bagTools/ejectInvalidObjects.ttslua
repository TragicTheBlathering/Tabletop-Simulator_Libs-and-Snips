local ejectInvalidObjectsFromBag = {}

function ejectInvalidObjectsFromBag.eject(bag, tags)
    local foundInvalidObjects = false
    local validGUIDs = {}

    for k, o in pairs(bag.getObjects()) do
        validGUIDs[o.guid] = false
        if o.tags ~= nil then
            local bTags = o.tags
            for k, t in pairs(tags) do
                for k, bT in pairs(bTags) do
                    if t == bT then
                        validGUIDs[o.guid] = true
                    end
                end
            end
        end
    end

    for k,v in pairs(validGUIDs) do
        if v == false then
            foundInvalidObjects = true
            break
        end
    end

    if foundInvalidObjects then
        local Z = bag.getBounds().size.z/2+0.5
        local errorBag = spawnObject({
            type = "Bag",
            position = bag.getPosition()+Vector(0,10,-Z),
            scale = {0.5, 0.5, 0.5},
            sound = true,
            })
        errorBag.setName('Error Objects')
        errorBag.setDescription("You acidently dropped invalid objects in the bag, they have all been moved inside this bag")
        broadcastToAll("Error : Whoops! You Dropped some invalid objects in here! I've moved them to a small bag next to the scale bag", "Orange")
        for guid, v in pairs(validGUIDs) do
            if not v then
                local o = bag.takeObject({guid=guid})
                errorBag.putObject(o)
            end
        end
    end
end

return ejectInvalidObjectsFromBag
