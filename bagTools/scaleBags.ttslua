--[[ Example Data
GlobalVariables.scaleBagData = {
        maptile_DrawBag = {
                tags = {maptile_Countryside='http://cloud-3.steamusercontent.com/ugc/1688270643043406251/A651D5CA5D876C2784761FC27F04CDB14CB7FF19/',
                        maptile_Core='http://cloud-3.steamusercontent.com/ugc/1688270643043527253/68E270678D47C66202EAF01B86981ADF5509CE89/'},
                value = {scaleValue = 5, baseScale=Vector(3.6, 5.8, 3.6), basePos=Vector(-53.9, 2.16, -43.5), origSize=0.2901816},
                empty = "http://cloud-3.steamusercontent.com/ugc/2265941315537168720/A0D67752A48BE0DDC1B046FED85236AFAE4D8A40/",
            },
        monster_DrawBag = {},
}
]]
local scaleBags = {}
local tool = {}
      tool.buildVariable=require("/_libs/bagTools/phraseVariable").buildVariables
--------------------------------------------------------------------------------
--- SCALE BAG ------------------------------------------------------------------
function scaleBags.fromContents(bag, value)
    local value = tool.buildVariable(bag, value)

    local bagQuantity = bag.getQuantity()
    local pos = bag.getPosition()
    local scale = bag.getScale()

    --print(logString(value))
    if bagQuantity > 0 then
        local Y_Scaler = value.baseScale.y + (bagQuantity * value.scaleValue)
        bag.setScale(Vector(scale.x, Y_Scaler, scale.z))

        --print("!!!!!")

        --- Adjust Position
        if value.pivot == 'center' then
            --print('USING CENTER PIVOT')
            local Y_Pos = (bag.getBounds().size.y/2 + value.basePos.y) - (value.origSizeY/2)
            bag.setPosition(Vector(pos.x, Y_Pos, pos.z))

        elseif value.pivot == 'bottom' then
            --print('USING BOTTOM PIVOT')
            if value.upsideDownBag then
                print("   UPSIDE DOWN")
                local Y_Pos = (bag.getBounds().size.y + value.basePos.y) - (value.origSizeY)
                bag.setPosition(Vector(pos.x, Y_Pos, pos.z))
            end
        --Bottom Piviot Requires no position adjustment after scale if not upside down

        elseif value.pivot == 'top' then
            print('USING TOP PIVOT')
            --Not Coded as I have never needed this yet
        end
    else
        bag.setScale(Vector(scale.x, value.baseScale.y, scale.z))
        bag.setPosition(Vector(pos.x, value.basePos.y, pos.z))
    end
    return true
end

return scaleBags
