local setUpZones = {}
--------------------------------------------------------------------------------
function setUpZones.setSetupObjvariable()
    return setUpZones.findSetUpObjects()
end

function setUpZones.getSetupObject(find, setupObjects)
    for name, obj in pairs(setupObjects) do
        if string.upper(name) == string.upper(find) then
            return obj
        end
    end
    return false
end

function setUpZones.findSetUpObjects()
    local plat = nil
    for k,v in pairs(getAllObjects()) do
        if v.hasTag("SetUpZone_Platform") then
            plat = v
        end
    end

    local objs = {}
    if plat ~= nil then
        for k,o in pairs(cast(plat)) do
            objs[o.getName()] = o
        end
    else
        broadcastToAll("Error : Can not find SetUp Platform", "Red")
    end

    return objs
end
--------------------------------------------------------------------------------
function setUpZones.test()
    print("--== WORKING (print) ==--")
    return "--== WORKING (return)==--"
end
--------------------------------------------------------------------------------
-- PRIVATE --
function cast(plat)
    local zone = Physics.cast({ origin=plat.getPosition()+Vector(0,1.4,0),
                                direction={0,1,0},
                                type=3,
                                max_distance=0,
                                size={79.5,3,79.5},
                                debug=false})
    return processCast(zone, plat)
end

function processCast(zone, plat)
    local found = {}
    for k, v in pairs(zone) do
        local obj = v.hit_object
        if obj ~= plat then
            found[obj] = true
        else
            found[obj] = false
        end
    end

    local validObjs = {}
    for obj, valid in pairs(found) do
        if valid then
            table.insert(validObjs, obj)
        end
    end

    return validObjs
end
--------------------------------------------------------------------------------
-- End --
return setUpZones
--[[
-- Place in Global
tool.setupZone=require("/_libs/setUpZones/setUpZones")
function getSetupObj(find)
    if setupObjects == nil then
        setupObjects = tool.setupZone.setSetupObjvariable(str)
        return tool.setupZone.getSetupObject(str, setupObjects)
    else
        print("Second")
        return tool.setupZone.getSetupObject(str, setupObjects)
    end
end
]]
