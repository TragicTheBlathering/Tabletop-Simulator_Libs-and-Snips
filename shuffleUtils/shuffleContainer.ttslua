local shuffleContainer = {}

local tool = {}
      tool.findGMNote=require("/_libs/stringUtils/stringUtils").findGMNoteLine
      tool.findTag=require("/_libs/tagUtils/tagUtils").allObjectInBagHaveTagThatMatchesBag

local hexC=require("/_libs/stringUtils/stringColours")


-- Shuffle Container.
function shuffleContainer.container(bag)
    local shuffle = false
    local errorRestrict = true
    if bag.getQuantity() > 0 then
        -- If container has tag ShuffleBagRestricted, all items in bag must share the ID_ tag of the bag itself.
        if bag.hasTag('ShuffleBagRestricted') then
            local searchResults = tool.findTag(bag, 'ID_') -- true means search the string, instead of exact match
            if not searchResults.objsNotMissingTag then
                printToAll(hexC.red..'Shuffle Error : '..hexC.orange..bag.getName()..hexC.yellow..' contains at least 1 invalid object.')
                errorRestrict = false
            else
                shuffle = true
            end
        else
            shuffle = true
        end
    end

    if bag.getQuantity() > 1 and shuffle == true then
        printToAll(hexC.yellow..'Shuffling : '..hexC.orange..bag.getName()..'.')
        bag.shuffle()
    elseif bag.getQuantity() == 1 and shuffle == true then
        printToAll(hexC.red..'No Shuffle : '..hexC.orange..bag.getName()..hexC.yellow..' only has 1 item.')
    elseif errorRestrict then
        printToAll(hexC.red..'No Shuffle : '..hexC.orange..bag.getName()..hexC.yellow..' is empty.')
    end

end

return shuffleContainer
