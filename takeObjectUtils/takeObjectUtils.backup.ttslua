local takeObjectUtils = {}
local tool = {}
      tool.tags = require("/_libs/tagUtils/tagUtils")

--------------------------------------------------------------------------------
--- reverseIndex  --------------------------------------------------------------
--- create a reverse index for ALL objects in a container
function takeObjectUtils.reverseIndex(ContainedObjects, switch)
    --zprint(ContainedObjects,'ContainedObjects')
    local z = {}
        if ContainedObjects[1] then
            local getdata = false; if ContainedObjects[1].Nickname ~= nil then getdata = true end
            for i, obj in ipairs(ContainedObjects) do
                local index = i; if getdata then index = index-1 else index = obj.index end
                if switch then
                    for key,find in pairs(switch) do
                        if obj[key] == find then
                            table.insert(z, index)
                        end
                    end
                else
                    table.insert(z, index)
                end
            end
            table.sort(z, function(a,b) return a>b end)
        end
    return z
end

--------------------------------------------------------------------------------
--- posFromObject(obj,switch) - 'top', 'bot'------------------------------------
--- create a pos value that is just above or below the container object --------
--- switch == 'top' -- Just above container
--- switch == 'bot' -- Just below container
--- switch == number -- use the number to set Y position
function takeObjectUtils.placeTopOrBot_ofObject(obj,switch)
    if not switch then switch = 'top' end
        if switch == 'top' then
            return obj.getPosition() + Vector(0, obj.getBounds().size.y+0.01, 0)
        elseif switch =='bot' then
            return obj.getPosition() + Vector(0, -obj.getBounds().size.y-0.01, 0)
        elseif type(switch) == 'number' then
            return Vector(0, switch, 0)
        else
            return Vector(0,0,0)
        end
  --end (This if statment was ended in single line)
end
--------------------------------------------------------------------------------
--- reverseIndexbyTag  ---------------------------------------------------------
--- find only valid taged objects and create a reverse index list for those objects only
--local indexesToRemove = tool.reverseIndexbyTag(TrashBag_ContentData, {tag='DiscardMe_', search=true}, {Name='Deck'})
function takeObjectUtils.reverseIndexbyTag(ContainedObjects, tag, switch)
    local z = {}
        local getdata = false; if ContainedObjects[1].Nickname ~= nil then getdata = true end

        for i, obj in ipairs(ContainedObjects) do
            local index = i; if getdata then index = index-1 else index = obj.index end -- change value for getObjects / getData
            local objtags; if getdata then objtags = obj.Tags else objtags = obj.tags end -- change value for getObjects / getData
            if (tag.tags and objtags) then
                if tool.tags.tagFound(objtags, tag.tags, tag.search) then
                    if switch then
                        for key,find in pairs(switch) do
                            if obj[key] == find then
                                table.insert(z, index)
                            end
                        end
                    else
                        table.insert(z, index)
                    end
                end
            end
        end

    table.sort(z, function(a,b) return a>b end)
    return z
end

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
return takeObjectUtils
