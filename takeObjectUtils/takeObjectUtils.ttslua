local takeObjectUtils = {}

local tool = {}
      tool.tags=require("/_libs/tagUtils/tagUtils")
      --tool.index=require("/_libs/setIndexType/setIndexType")

function setIndex(i, isGetData, obj)
    local index = i
    if isGetData then
        return index-1
    else
        return obj.index
    end
end

function takeObjectUtils.reverseIndex(containedObjects)
    local z = {}
    local tagType, isGetData = tool.tags.getTagKey(containedObjects)
    for i, obj in pairs(containedObjects) do
        local index = setIndex(i, isGetData, obj)
        table.insert(z, index)
    end
    table.sort(z, function(a,b) return a>b end)
    --print(logString(z, "\n ---- z"))
    return z
end

function takeObjectUtils.reverseIndex_TagedOnly(tags, containedObjects, ...)
    local arg = {...}; local type = false; local searchSubStr = false
    for k, v in ipairs(arg) do
        if tostring(v) == 'true' or tostring(v) == 'false' then
            searchSubStr = v
        else
            type = v
        end
    end

    local tagType, isGetData = tool.tags.getTagKey(containedObjects)
    local tagFound = tool.tags.isTagFound_ObjList(containedObjects, tags, searchSubStr)

    local z = {}
    if tagFound then
        --print("\n===========")
        for i, obj in pairs(containedObjects) do
            local index = setIndex(i, isGetData, obj)
            local validTag = tool.tags.singleTagFoundinTagList(obj[tagType], tags)
            if type then
                if obj.Name == type and validTag then
                    table.insert(z, index) -- add all objs with valid tags AND type ("deck")
                end
            elseif validTag then
                table.insert(z, index)-- add all objs with valid tags
            end
        end
    end
    table.sort(z, function(a,b) return a>b end)
    --print(logString(z, "\n ---- z"))
    return z
end

--------------------------------------------------------------------------------
--- posFromObject(obj,switch) - 'top', 'bot'------------------------------------
--- create a pos value that is just above or below the container object --------
--- switch == 'top' -- Just above container
--- switch == 'bot' -- Just below container
--- switch == number -- use the number to set Y position
function takeObjectUtils.placeTopOrBot_ofObject(obj,switch)
    if not switch then switch = 'top' end
        if switch == 'top' then
            return obj.getPosition() + Vector(0, obj.getBounds().size.y+0.01, 0)
        elseif switch =='bot' then
            return obj.getPosition() + Vector(0, -obj.getBounds().size.y-0.01, 0)
        elseif type(switch) == 'number' then
            return Vector(0, switch, 0)
        else
            return Vector(0,0,0)
        end
        print('6 - !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')
  --end (This if statment was ended in single line)
end

return takeObjectUtils
